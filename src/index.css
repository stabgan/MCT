@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&family=JetBrains+Mono:wght@300;400;500;600&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    scroll-behavior: smooth;
  }
  
  body {
    @apply bg-background text-text-primary font-sans antialiased;
    font-feature-settings: 'cv02', 'cv03', 'cv04', 'cv11';
  }
  
  * {
    @apply border-border;
  }
}

@layer components {
  .glass-effect {
    @apply bg-white/70 backdrop-blur-lg border border-white/20;
    box-shadow: 0 8px 32px rgba(31, 38, 135, 0.37);
  }
  
  .glass-card {
    @apply bg-white/60 backdrop-blur-xl border border-white/30 rounded-2xl;
    box-shadow: 
      0 8px 32px rgba(31, 38, 135, 0.15),
      inset 0 1px 0 rgba(255, 255, 255, 0.4);
  }
  
  .gradient-text {
    @apply bg-gradient-to-r from-primary-600 via-secondary-500 to-primary-600 bg-clip-text text-transparent;
    background-size: 200% 100%;
    animation: gradient-shift 3s ease-in-out infinite;
  }
  
  .neural-container {
    @apply relative overflow-hidden rounded-3xl;
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
  }
  
  .neural-node {
    @apply rounded-full shadow-neural;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .neural-node-encoder {
    @apply bg-gradient-to-br from-neural-encoder/80 to-neural-encoder;
  }
  
  .neural-node-decoder {
    @apply bg-gradient-to-br from-neural-decoder/80 to-neural-decoder;
  }
  
  .neural-node-attention {
    @apply bg-gradient-to-br from-neural-attention/80 to-neural-attention;
  }
  
  .neural-node-embedding {
    @apply bg-gradient-to-br from-neural-embedding/80 to-neural-embedding;
  }
  
  .neural-connection {
    @apply stroke-gray-300;
    stroke-width: 2;
    transition: all 0.3s ease;
  }
  
  .neural-connection.active {
    @apply stroke-neural-flow;
    stroke-width: 3;
    filter: drop-shadow(0 0 4px rgba(99, 102, 241, 0.6));
    animation: flow-pulse 2s ease-in-out infinite;
  }
  
  .architecture-block {
    @apply relative overflow-hidden rounded-2xl transition-all duration-300;
    background: linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(248,250,252,0.8) 100%);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255,255,255,0.3);
  }
  
  .architecture-block:hover {
    transform: translateY(-4px) scale(1.02);
    box-shadow: 
      0 20px 40px rgba(0,0,0,0.1),
      0 0 0 1px rgba(255,255,255,0.1),
      inset 0 1px 0 rgba(255,255,255,0.6);
  }
  
  .info-card {
    @apply bg-background-card rounded-xl border border-gray-200/50 p-6 transition-all duration-300;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
  }
  
  .info-card:hover {
    @apply shadow-soft;
    transform: translateY(-2px);
  }
  
  .parameter-badge {
    @apply inline-flex items-center px-3 py-1 rounded-full text-xs font-medium;
    @apply bg-primary-50 text-primary-700 border border-primary-200;
  }
  
  .layer-count-indicator {
    @apply absolute top-2 right-2 bg-text-primary text-text-inverse rounded-full;
    @apply w-8 h-8 flex items-center justify-center text-xs font-bold;
    backdrop-filter: blur(10px);
  }
  
  .flow-arrow {
    @apply text-gray-400 transition-all duration-300;
  }
  
  .flow-arrow.active {
    @apply text-neural-flow;
    animation: bounce-arrow 1s ease-in-out infinite;
  }
}

@keyframes gradient-shift {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

@keyframes flow-pulse {
  0%, 100% { 
    stroke-dasharray: 5, 5;
    stroke-dashoffset: 0;
    opacity: 0.7;
  }
  50% { 
    stroke-dasharray: 5, 5;
    stroke-dashoffset: 10;
    opacity: 1;
  }
}

@keyframes bounce-arrow {
  0%, 100% { transform: translateX(0); }
  50% { transform: translateX(4px); }
}

@keyframes neuralPulse {
  0%, 100% { 
    transform: scale(1); 
    opacity: 0.8; 
  }
  50% { 
    transform: scale(1.15); 
    opacity: 1; 
    box-shadow: 0 0 20px rgba(99, 102, 241, 0.4);
  }
}

/* Enhanced responsiveness for small screens */
@media (max-width: 640px) {
  .neural-container {
    @apply rounded-2xl;
  }
  
  .architecture-block {
    @apply rounded-xl;
  }
} 